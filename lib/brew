#!/bin/bash

run_brew() {
    # Check for Homebrew
    if type_exists 'brew'; then
        e_header "Updating Homebrew..."
        # Use the latest version of Homebrew
        brew update
        [[ $? ]] && e_success "Done"

        e_header "Updating any existing Homebrew formulae..."
        # Upgrade any already-installed formulae
        brew upgrade
        [[ $? ]] && e_success "Done"

        e_header "Checking status of desired Homebrew formulae..."
        local list_formulae
        local -a missing_formulae
        local -a desired_formulae=(
            'bash'
            'bash-completion@2'
            'bash-git-prompt'
            'coreutils' # GNU core utilities (those that come with OS X are outdated)
            'diff-so-fancy'
            'git'
            'ffmpeg'
            'graphicsmagick --with-webp'
            'hub'
            # 'node' # Use nvm to manage Node.js installation
            'rsync'
            'the_silver_searcher'
            'tree'
            'wget'
            'wifi-password'
        )

        # Switch to using brew-installed bash as default shell
        if ! fgrep -q '/usr/local/bin/bash' /etc/shells; then
            echo '/usr/local/bin/bash' | sudo tee -a /etc/shells;
            chsh -s /usr/local/bin/bash;
        fi;

        for index in ${!desired_formulae[*]}
        do
            if ! formula_exists ${desired_formulae[$index]}; then
                # Store the name (and options) of every missing formula
                missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
            fi
        done

        if [[ "$missing_formulae" ]]; then
            # Convert the array of missing formula into a list of space-separate strings
            list_formulae=$( printf "%s " "${missing_formulae[@]}" )

            e_header "Installing missing Homebrew formulae..."
            # Install all missing formulae
            brew install $list_formulae

            [[ $? ]] && e_success "Done"
        fi

        # Remove outdated versions from the Cellar
        brew cleanup

        e_header "Checking status of desired Homebrew casks..."
        local list_casks
        local -a missing_casks
        local -a desired_casks=(
            'docker'
            'dropbox'
            'firefox'
            'flux'
            'google-chrome'
            'iterm2'
            'kap'
            'now'
            'spectacle'
            'spotify'
            'the-unarchiver'
            'visual-studio-code'
            'vlc'
        )

        for index in ${!desired_casks[*]}
        do
            if ! cask_exists ${desired_casks[$index]}; then
                # Store the name (and options) of every missing formula
                missing_casks=("${missing_casks[@]}" "${desired_casks[$index]}")
            fi
        done

        if [[ "$missing_casks" ]]; then
            # Convert the array of missing formula into a list of space-separate strings
            list_casks=$( printf "%s " "${missing_casks[@]}" )

            e_header "Installing missing Homebrew casks..."
            # Install all missing casks
            brew cask install $list_casks

            [[ $? ]] && e_success "Done"
        fi

        e_header "Tapping caskroom/fonts..."
        brew tap caskroom/fonts
        [[ $? ]] && e_success "Done"

        e_header "Checking status of desired Homebrew fonts..."
        local list_fonts
        local -a missing_fonts
        local -a desired_fonts=(
            'font-inconsolata'
            'font-source-code-pro'
        )

        for index in ${!desired_fonts[*]}
        do
            if ! font_exists ${desired_fonts[$index]}; then
                # Store the name (and options) of every missing formula
                missing_fonts=("${missing_fonts[@]}" "${desired_fonts[$index]}")
            fi
        done

        if [[ "$missing_fonts" ]]; then
            # Convert the array of missing formula into a list of space-separate strings
            list_fonts=$( printf "%s " "${missing_fonts[@]}" )

            e_header "Installing missing Homebrew casks..."
            # Install all missing casks
            brew cask install $list_fonts

            [[ $? ]] && e_success "Done"
        fi

        # e_header "Attempting to install Consolas..."
        # curl https://gist.githubusercontent.com/zebMcCorkle/fa4508e27f457d7b796ffd474be35d62/raw/59942466b13fe92d09b4b537cc7fcfb309c05c4a/consolas.sh | bash -
        # [[ $? ]] && e_success "Done"

        # Remove outdated versions from the Cellar
        brew cask cleanup
    else
        printf "\n"
        e_error "Error: Homebrew not found."
        printf "Aborting...\n"
        exit
    fi
}
